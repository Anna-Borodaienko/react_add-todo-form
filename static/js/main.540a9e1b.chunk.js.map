{"version":3,"sources":["App.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","index.tsx"],"names":["users","UserInfo","user","className","href","email","name","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","extendedTodo","usersFromServer","userId","find","App","useState","newTodos","setTodos","setTitle","selectedUser","setUser","noUserError","setNoUser","noTitleError","setNoTitle","handleSubmit","Math","max","prevTodos","action","method","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","disabled","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.540a9e1b.chunk.js","sourcesContent":["import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { ExtendedTodo, Todo } from './types/todo';\nimport { User } from './types/user';\n\nconst extendTodo = (\n  todos: Todo[],\n  users: User[],\n): ExtendedTodo[] => {\n  return todos.map(todo => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId),\n  }));\n};\n\nconst extendedTodo = extendTodo(\n  todosFromServer,\n  usersFromServer,\n);\n\nexport const App:React.FC = () => {\n  const [newTodos, setTodos] = useState<ExtendedTodo[]>(extendedTodo);\n  const [title, setTitle] = useState('');\n  const [selectedUser, setUser] = useState(0);\n  const [noUserError, setNoUser] = useState(false);\n  const [noTitleError, setNoTitle] = useState(false);\n\n  const addTodo = (todo: ExtendedTodo) => {\n    setTodos(prevTodos => [...prevTodos, todo]);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUser(0);\n    setNoUser(false);\n    setNoTitle(false);\n  };\n\n  const handleSubmit = () => {\n    if (!noUserError && !noTitleError) {\n      addTodo({\n        id: Math.max(...newTodos.map(todo => todo.id)) + 1,\n        title,\n        userId: selectedUser,\n        completed: false,\n        user: usersFromServer.find(user => user.id === selectedUser),\n      });\n\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={event => {\n          event.preventDefault();\n          handleSubmit();\n        }}\n      >\n        <label className=\"field\">\n          {'Title: '}\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={event => {\n              setTitle(event.target.value);\n              setNoTitle(false);\n            }}\n          />\n        </label>\n\n        {noTitleError\n          && (<span className=\"error\">Please enter a title</span>)}\n\n        <div className=\"field\">\n          {'User: '}\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={event => {\n              setUser(+event.target.value);\n              setNoUser(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => {\n              const { id, name } = user;\n\n              return (\n                <option\n                  key={id}\n                  value={id}\n                >\n                  {name}\n\n                </option>\n              );\n            })}\n          </select>\n\n          {noUserError\n          && (<span className=\"error\">Please choose a user</span>)}\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={() => {\n            if (!selectedUser) {\n              setNoUser(true);\n            }\n\n            if (!title) {\n              setNoTitle(true);\n            }\n          }}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","import { User } from '../../types/user';\n\nexport type Props = {\n  user: User | undefined,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    user\n      ? (\n        <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n          {user.name}\n        </a>\n      )\n      : (\n        <span>There is no user</span>\n      )\n  );\n};\n","import classNames from 'classnames';\nimport { ExtendedTodo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\nexport type Props = {\n  todo: ExtendedTodo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { ExtendedTodo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\nexport type Props = {\n  todos: ExtendedTodo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}